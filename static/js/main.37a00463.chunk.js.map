{"version":3,"sources":["components/ouput.js","components/texteditor.js","components/nav-head.js","App.js","reportWebVitals.js","index.js"],"names":["Output","file","flex","bg","border","borderColor","p","dangerouslySetInnerHTML","rawMarkup","marked","console","log","__html","getMarkdownText","Texteditor","props","state","editorState","EditorState","createEmpty","onChange","setState","value","stateToHTML","getCurrentContent","replacer","input","replace","this","RichUtils","toggleInlineStyle","hiddenElement","document","createElement","href","encodeURI","target","download","click","color","m","direction","spacing","align","onClick","_onBoldClick","bind","as","GoBold","_onItalicClick","GoItalic","onDownload","GoDesktopDownload","className","handleKeyCommand","placeholder","Component","NavHeader","leftIcon","colorScheme","variant","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.37a00463.chunk.js","sourcesContent":["import marked from 'marked';\nimport {\n  Text,\n  Box,\n  Tabs,\n  TabList,\n  Tab,\n  TabPanels,\n  TabPanel,\n} from \"@chakra-ui/react\";\n\nconst Output = (file) => {\n \n  \nconst getMarkdownText= ()=>{\n    var rawMarkup= marked('_Nothing_ to show ') ;\n    if(file.file){rawMarkup=marked(file.file);\n      console.log(file.file);\n      console.log()\n    }\n    else{\n      rawMarkup = marked('_Nothing_ to show ');\n    }\n    return { __html: rawMarkup };\n  }\n  return (\n    <Box flex=\"1\" bg=\"white\" border=\"1px\" borderColor=\"gray.10\" p={5}>\n      <Tabs>\n        <TabList>\n          <Tab>Output</Tab>\n          <Tab>Preview</Tab>\n         \n        </TabList>\n\n        <TabPanels>\n          <TabPanel>\n            <Text>{file.file}</Text>\n          </TabPanel>\n          <TabPanel>\n         <div dangerouslySetInnerHTML={getMarkdownText()} />\n          </TabPanel>\n         \n        </TabPanels>\n      </Tabs>\n    </Box>\n  );\n};\nexport default Output;\n","import React, { Component } from \"react\";\n// Importing Module\nimport { Editor, EditorState, RichUtils } from \"draft-js\";\nimport \"draft-js/dist/Draft.css\";\nimport \"./texteditor.css\";\nimport { convertToRaw } from \"draft-js\";\nimport { stateToHTML } from \"draft-js-export-html\";\nimport { Flex, Center, Text, Box, Button, Stack, Icon } from \"@chakra-ui/react\";\nimport { GoBold, GoItalic, GoDesktopDownload } from \"react-icons/go\";\nimport Output from './ouput'\n\nexport default class Texteditor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { editorState: EditorState.createEmpty() };\n    this.onChange = (editorState) => {\n      this.setState({ editorState });\n      var value = stateToHTML(this.state.editorState.getCurrentContent());\n      this.file = this.replacer(value);\n      // console.log(convertToRaw(this.state.editorState.getCurrentContent()));\n    };\n  }\n\n  replacer(input) {\n    // console.log(input);\n    input = input\n      .replace(/<p>/g, \"\")\n      .replace(/<\\/p>/g, \"</br>\")\n      .replace(/<br>/g, \"\")\n      .replace(/<strong>/g, \"**\")\n      .replace(/<\\/strong>/g, \"**\")\n      .replace(/&nbsp;/g, \" \");\n    input = input.replace(/<em>/g, \"_\").replace(/<\\/em>/g, \"_\");\n    return input;\n  }\n\n  _onBoldClick() {\n    this.onChange(RichUtils.toggleInlineStyle(this.state.editorState, \"BOLD\"));\n  }\n  _onItalicClick() {\n    this.onChange(\n      RichUtils.toggleInlineStyle(this.state.editorState, \"ITALIC\")\n    );\n  }\n  _onUnderlineClick() {\n    this.onChange(\n      RichUtils.toggleInlineStyle(this.state.editorState, \"UNDERLINE\")\n    );\n  }\n  onDownload() {\n    const hiddenElement = document.createElement(\"a\");\n\n    hiddenElement.href = \"data:attachment/text,\" + encodeURI(this.file);\n    hiddenElement.target = \"_blank\";\n    hiddenElement.download = \"README.md\";\n    hiddenElement.click();\n  }\n\n  render() {\n    return (\n      <div>\n        <Flex color=\"black\">\n          <Box\n            flex=\"1\"\n            bg=\"tomato\"\n            border=\"1px\"\n            borderColor=\"gray.10\"\n            p={1}\n            m={2}\n          >\n            <Stack direction=\"row\" spacing={1} align=\"center\">\n              <Button onClick={this._onBoldClick.bind(this)}>\n                <Icon as={GoBold} />\n              </Button>\n              <Button onClick={this._onItalicClick.bind(this)}>\n                {\" \"}\n                <Icon as={GoItalic} />\n              </Button>\n\n              <Button onClick={this.onDownload.bind(this)}>\n                <Icon as={GoDesktopDownload} /> &nbsp;Download\n              </Button>\n            </Stack>\n            <Box className=\"editors-panel\">\n              <Editor\n                editorState={this.state.editorState}\n                handleKeyCommand={this.handleKeyCommand}\n                onChange={this.onChange}\n                placeholder=\"Lets Start Documenting ...\"\n              />\n            </Box>\n          </Box>\n          <Output file ={this.file}/>\n        </Flex>\n         \n      </div>\n    );\n  }\n}\n","import \"./nav-head.css\";\nimport { GrLogin } from \"react-icons/gr\";\nimport { Button, Spacer, Flex, Stack, Box } from \"@chakra-ui/react\";\n\nfunction NavHeader() {\n  return (\n    <Box className=\"nav_header\" p={1}>\n      <Flex direction=\"row\" spacing={2}>\n        Beautiful readme.md\n        <Spacer />\n        <Stack direction=\"row\" spacing={2}>\n          <Button leftIcon={<GrLogin />} colorScheme=\"pink\" variant=\"solid\">\n            Login\n          </Button>\n          <Button colorScheme=\"white\" variant=\"outline\">\n            Register\n          </Button>\n        </Stack>\n      </Flex>\n    </Box>\n  );\n}\n\nexport default NavHeader;\n","import \"./App.css\";\nimport Texteditor from \"./components/texteditor\";\nimport NavHeader from \"./components/nav-head\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavHeader />\n      <Texteditor />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ChakraProvider } from \"@chakra-ui/react\"\n\nReactDOM.render(\n  <ChakraProvider>\n    <App />\n    </ChakraProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}