{"version":3,"sources":["components/ouput.js","components/texteditor.js","assets/white heading.png","components/nav-head.js","App.js","reportWebVitals.js","index.js"],"names":["Output","file","flex","bg","border","borderColor","p","dangerouslySetInnerHTML","rawMarkup","marked","console","log","__html","getMarkdownText","Texteditor","props","state","editorState","EditorState","createEmpty","onChange","a","setState","stateToHTML","getCurrentContent","value","replacer","this","input","replace","RichUtils","toggleInlineStyle","hiddenElement","document","createElement","href","encodeURI","target","download","click","color","m","direction","spacing","align","onClick","_onBoldClick","bind","as","GoBold","_onItalicClick","GoItalic","onDownload","GoDesktopDownload","className","handleKeyCommand","placeholder","Component","NavHeader","src","logo","alt","width","class","leftIcon","colorScheme","variant","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.52b88340.chunk.js","sourcesContent":["import marked from 'marked';\r\nimport {\r\n  Text,\r\n  Box,\r\n  Tabs,\r\n  TabList,\r\n  Tab,\r\n  TabPanels,\r\n  TabPanel,\r\n} from \"@chakra-ui/react\";\r\n\r\n\r\n\r\nconst Output = (file) => {\r\n \r\n  \r\nconst getMarkdownText= ()=>{\r\n    var rawMarkup= marked('_Nothing_ to show ') ;\r\n    if(file.file){rawMarkup=marked(file.file);\r\n      console.log(file.file);\r\n      console.log()\r\n    }\r\n    else{\r\n      rawMarkup = marked('_Nothing_ to show ');\r\n    }\r\n    return { __html: rawMarkup };\r\n  }\r\n  return (\r\n    <Box flex=\"1\" bg=\"white\" border=\"1px\" borderColor=\"gray.10\" p={5}>\r\n      <Tabs>\r\n        <TabList>\r\n          <Tab>Output</Tab>\r\n          <Tab>Preview</Tab>\r\n         \r\n        </TabList>\r\n\r\n        <TabPanels>\r\n          <TabPanel>\r\n            <Text>{file.file}</Text>\r\n          </TabPanel>\r\n          <TabPanel>\r\n         <div dangerouslySetInnerHTML={getMarkdownText()} />\r\n          </TabPanel>\r\n         \r\n        </TabPanels>\r\n      </Tabs>\r\n    </Box>\r\n  );\r\n};\r\nexport default Output;\r\n","import React, { Component } from \"react\";\r\n// Importing Module\r\nimport { Editor, EditorState, RichUtils } from \"draft-js\";\r\nimport \"draft-js/dist/Draft.css\";\r\nimport \"./texteditor.css\";\r\nimport { convertToRaw } from \"draft-js\";\r\nimport { stateToHTML } from \"draft-js-export-html\";\r\nimport { Flex, Center, Text, Box, Button, Stack, Icon } from \"@chakra-ui/react\";\r\nimport { GoBold, GoItalic, GoDesktopDownload } from \"react-icons/go\";\r\nimport Output from './ouput'\r\n\r\nexport default class Texteditor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { editorState: EditorState.createEmpty(),file:'' };\r\n    this.onChange = async (editorState) => {\r\n     await this.setState({ editorState });\r\n      var value =await stateToHTML(this.state.editorState.getCurrentContent());\r\n      this.setState({file: this.replacer(value)});\r\n      // console.log(convertToRaw(this.state.editorState.getCurrentContent()));\r\n    };\r\n  }\r\n\r\n  replacer(input) {\r\n    // console.log(input);\r\n    input = input\r\n      .replace(/<p>/g, \"\")\r\n      .replace(/<\\/p>/g, \"</br>\")\r\n      .replace(/<br>/g, \"\")\r\n      .replace(/<strong>/g, \"**\")\r\n      .replace(/<\\/strong>/g, \"**\")\r\n      .replace(/&nbsp;/g, \" \");\r\n    input = input.replace(/<em>/g, \"_\").replace(/<\\/em>/g, \"_\");\r\n    return input;\r\n  }\r\n\r\n  _onBoldClick() {\r\n    this.onChange(RichUtils.toggleInlineStyle(this.state.editorState, \"BOLD\"));\r\n  }\r\n  _onItalicClick() {\r\n    this.onChange(\r\n      RichUtils.toggleInlineStyle(this.state.editorState, \"ITALIC\")\r\n    );\r\n  }\r\n  _onUnderlineClick() {\r\n    this.onChange(\r\n      RichUtils.toggleInlineStyle(this.state.editorState, \"UNDERLINE\")\r\n    );\r\n  }\r\n  onDownload() {\r\n    const hiddenElement = document.createElement(\"a\");\r\n\r\n    hiddenElement.href = \"data:attachment/text,\" + encodeURI(this.file);\r\n    hiddenElement.target = \"_blank\";\r\n    hiddenElement.download = \"README.md\";\r\n    hiddenElement.click();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Flex color=\"black\">\r\n          <Box\r\n            flex=\"1\"\r\n            bg=\"#F0A6CA\"\r\n            border=\"0.5px\"\r\n            borderColor=\"#F0E6EF\"\r\n            p={1}\r\n            m={2}\r\n          >\r\n            <Stack direction=\"row\" spacing={1} align=\"center\">\r\n              <Button onClick={this._onBoldClick.bind(this)}>\r\n                <Icon as={GoBold} />\r\n              </Button>\r\n              <Button onClick={this._onItalicClick.bind(this)}>\r\n                {\" \"}\r\n                <Icon as={GoItalic} />\r\n              </Button>\r\n\r\n              <Button onClick={this.onDownload.bind(this)}>\r\n                <Icon as={GoDesktopDownload} /> &nbsp;Download\r\n              </Button>\r\n            </Stack>\r\n            <Box className=\"editors-panel\">\r\n              <Editor\r\n                editorState={this.state.editorState}\r\n                handleKeyCommand={this.handleKeyCommand}\r\n                onChange={this.onChange}\r\n                placeholder=\"Lets Start Documenting ...\"\r\n              />\r\n            </Box>\r\n          </Box>\r\n          <Output file ={this.state.file}/>\r\n        </Flex>\r\n         \r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/white heading.e7c01da3.png\";","import \"./nav-head.css\";\r\nimport { GrLogin } from \"react-icons/gr\";\r\nimport { Button, Spacer, Flex, Stack, Box } from \"@chakra-ui/react\";\r\nimport logo from '../assets/white heading.png'\r\n\r\nfunction NavHeader() {\r\n  return (\r\n    <Box className=\"nav_header\" p={1}>\r\n      <Flex direction=\"row\" spacing={2}>\r\n        <img src={logo} alt=\"heading\"  width=\"120px\" class=\"center\"/>\r\n        <Spacer />\r\n        <Stack direction=\"row\" spacing={2}>\r\n          <Button leftIcon={<GrLogin />} colorScheme=\"pink\" variant=\"solid\">\r\n            Login\r\n          </Button>\r\n          <Button colorScheme=\"white\" variant=\"outline\">\r\n            Register\r\n          </Button>\r\n        </Stack>\r\n      </Flex>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default NavHeader;\r\n","import \"./App.css\";\r\nimport Texteditor from \"./components/texteditor\";\r\nimport NavHeader from \"./components/nav-head\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <NavHeader />\r\n      <Texteditor />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { ChakraProvider } from \"@chakra-ui/react\"\r\n\r\nReactDOM.render(\r\n  <ChakraProvider>\r\n    <App />\r\n    </ChakraProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}