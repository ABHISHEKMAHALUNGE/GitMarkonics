{"version":3,"sources":["components/texteditor.js","App.js","reportWebVitals.js","index.js"],"names":["Texteditor","props","state","editorState","EditorState","createEmpty","onChange","setState","value","stateToHTML","getCurrentContent","file","replacer","input","console","log","replace","this","RichUtils","toggleInlineStyle","hiddenElement","document","createElement","href","encodeURI","target","download","click","color","flex","bg","border","borderColor","p","m","direction","spacing","align","onClick","_onBoldClick","bind","as","GoBold","_onItalicClick","GoItalic","onDownload","GoDesktopDownload","className","handleKeyCommand","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"4XAasBA,E,kDACpB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAACC,YAAaC,cAAYC,eACvC,EAAKC,SAAW,SAAAH,GAAgB,EAAKI,SAAS,CAACJ,gBAC9C,IAAIK,EAAOC,YAAY,EAAKP,MAAMC,YAAYO,qBAC/C,EAAKC,KAAK,EAAKC,SAASJ,IALP,E,qDAUVK,GAKV,OAHAC,QAAQC,IAAIF,GACZA,EAAMA,EAAMG,QAAQ,OAAQ,KAAKA,QAAQ,SAAU,SAASA,QAAQ,YAAa,MAAMA,QAAQ,cAAe,MAAMA,QAAQ,UAAU,O,qCAMnIC,KAAKX,SAASY,YAAUC,kBAAkBF,KAAKf,MAAMC,YAAa,W,uCAIlEc,KAAKX,SAASY,YAAUC,kBAAkBF,KAAKf,MAAMC,YAAa,a,0CAGlEc,KAAKX,SAASY,YAAUC,kBAAkBF,KAAKf,MAAMC,YAAa,gB,mCAKnE,IAAMiB,EAAgBC,SAASC,cAAc,KAE7CF,EAAcG,KAAO,wBAA0BC,UAAUP,KAAKN,MAC9DS,EAAcK,OAAS,SACvBL,EAAcM,SAAW,YACzBN,EAAcO,U,+BAMT,OACR,8BACA,eAAC,IAAD,CAAMC,MAAM,QAAZ,UAEE,eAAC,IAAD,CAAMC,KAAK,IAAIC,GAAG,SAASC,OAAO,MAAMC,YAAY,UAAWC,EAAG,EAAGC,EAAG,EAAxE,UACA,eAAC,IAAD,CAAOC,UAAU,MAAMC,QAAS,EAAGC,MAAM,SAAzC,UACA,cAAC,IAAD,CAAQC,QAASrB,KAAKsB,aAAaC,KAAKvB,MAAxC,SAA+C,cAAC,IAAD,CAAMwB,GAAIC,QAEjD,eAAC,IAAD,CAASJ,QAASrB,KAAK0B,eAAeH,KAAKvB,MAA3C,cAAmD,cAAC,IAAD,CAAMwB,GAAIG,SAE7D,cAAC,IAAD,CAASN,QAASrB,KAAK4B,WAAWL,KAAKvB,MAAvC,SAA8C,cAAC,IAAD,CAAMwB,GAAIK,WAEtD,cAAC,IAAD,CAAKC,UAAU,gBAAf,SACE,cAAC,SAAD,CAAQ5C,YAAac,KAAKf,MAAMC,YAC5B6C,iBAAkB/B,KAAK+B,iBACvB1C,SAAUW,KAAKX,gBAE/B,eAAC,IAAD,CAAKuB,KAAK,IAAIC,GAAG,QAAQC,OAAO,MAAMC,YAAY,UAAUC,EAAG,EAA/D,UACE,cAAC,IAAD,qBAGA,eAAC,IAAD,eAAQhB,KAAKN,oB,GAhEwBsC,aCA1BC,MAXf,WACE,OACE,sBAAKH,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,iCAGA,cAAC,EAAD,QCISI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,SCAdQ,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFxC,SAASyC,eAAe,SAM1BX,M","file":"static/js/main.8b61c01e.chunk.js","sourcesContent":["import React, {Component} from 'react'; \r\n// Importing Module \r\nimport {Editor, EditorState , RichUtils} from 'draft-js';\r\nimport 'draft-js/dist/Draft.css';\r\nimport './texteditor.css';\r\nimport {\r\n  convertToRaw,\r\n} from 'draft-js';\r\nimport { stateToHTML } from \"draft-js-export-html\";\r\nimport { Flex,Center,Text,Box,Button,Stack,Icon} from \"@chakra-ui/react\";\r\nimport { GoBold,GoItalic,GoDesktopDownload } from \"react-icons/go\";\r\n\r\nconst  dkl = \"hello\";\r\n export default class Texteditor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {editorState: EditorState.createEmpty()};\r\n    this.onChange = editorState => {this.setState({editorState});\r\n     var value =stateToHTML(this.state.editorState.getCurrentContent());\r\n    this.file=this.replacer(value);\r\n  };\r\n \r\n\r\n  }\r\n  replacer(input)\r\n  {\r\n console.log(input);\r\n input=input.replace(/<p>/g, ' ').replace(/<\\/p>/g, '</br>').replace(/<strong>/g, '**').replace(/<\\/strong>/g, '**').replace(/&nbsp;/g,\" \");  \r\n \r\n return input;\r\n  }\r\n \r\n  _onBoldClick() {\r\n    this.onChange(RichUtils.toggleInlineStyle(this.state.editorState, 'BOLD'));\r\n    \r\n  }\r\n  _onItalicClick() {\r\n    this.onChange(RichUtils.toggleInlineStyle(this.state.editorState, 'ITALIC'));\r\n  }\r\n  _onUnderlineClick() {\r\n    this.onChange(RichUtils.toggleInlineStyle(this.state.editorState, 'UNDERLINE'));\r\n    \r\n  }\r\n  onDownload(){\r\n   \r\n   const hiddenElement = document.createElement('a');\r\n\r\n   hiddenElement.href = 'data:attachment/text,' + encodeURI(this.file);\r\n   hiddenElement.target = '_blank';\r\n   hiddenElement.download = 'README.md';\r\n   hiddenElement.click();\r\n    \r\n  }\r\n    \r\n    \r\n      render() {\r\n        return (\r\n<div>\r\n<Flex color=\"black\" >\r\n  \r\n  <Box  flex=\"1\" bg=\"tomato\" border=\"1px\" borderColor=\"gray.10\"  p={1} m={2} >\r\n  <Stack direction=\"row\" spacing={1} align=\"center\">\r\n  <Button onClick={this._onBoldClick.bind(this)}><Icon as={GoBold} />\r\n    </Button>\r\n          <Button  onClick={this._onItalicClick.bind(this)}> <Icon as={GoItalic} /></Button>\r\n          \r\n          <Button  onClick={this.onDownload.bind(this)}><Icon as={GoDesktopDownload} /></Button>\r\n          </Stack>\r\n            <Box className=\"editors-panel\">\r\n              <Editor editorState={this.state.editorState}\r\n                  handleKeyCommand={this.handleKeyCommand}\r\n                  onChange={this.onChange} /></Box>\r\n  </Box>\r\n  <Box flex=\"1\" bg=\"white\" border=\"1px\" borderColor=\"gray.10\" p={5}>\r\n    <Text>\r\n       OUTPUT\r\n    </Text>\r\n    <Text> {this.file}</Text>\r\n  </Box>\r\n</Flex>\r\n</div>\r\n\r\n        );\r\n    }\r\n}\r\n","import './App.css';\r\nimport  Texteditor from './components/texteditor';\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n      Beautiful readme.md\r\n      </header> \r\n      <Texteditor/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { ChakraProvider } from \"@chakra-ui/react\"\r\n\r\nReactDOM.render(\r\n  <ChakraProvider>\r\n    <App />\r\n    </ChakraProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}