{"version":3,"sources":["components/texteditor.js","App.js","reportWebVitals.js","index.js"],"names":["Texteditor","props","state","editorState","EditorState","createEmpty","onChange","setState","this","RichUtils","toggleInlineStyle","className","onClick","_onBoldClick","bind","_onItalicClick","_onUnderlineClick","handleKeyCommand","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAMsBA,G,gEAWlB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CAACC,YAAaC,cAAYC,eACvC,EAAKC,SAAW,SAAAH,GAAW,OAAI,EAAKI,SAAS,CAACJ,iBAH/B,E,2DARnBK,KAAKF,SAASG,YAAUC,kBAAkBF,KAAKN,MAAMC,YAAa,W,uCAGlEK,KAAKF,SAASG,YAAUC,kBAAkBF,KAAKN,MAAMC,YAAa,a,0CAGlEK,KAAKF,SAASG,YAAUC,kBAAkBF,KAAKN,MAAMC,YAAa,kB,8CAS9D,OACE,gCACA,wBAAQQ,UAAU,WAAWC,QAASJ,KAAKK,aAAaC,KAAKN,MAA7D,kBACA,wBAAQG,UAAU,WAAWC,QAASJ,KAAKO,eAAeD,KAAKN,MAA/D,oBACA,wBAAQG,UAAU,WAAWC,QAASJ,KAAKQ,kBAAkBF,KAAKN,MAAlE,uBACE,qBAAKG,UAAU,gBAAf,SACE,cAAC,SAAD,CAAQR,YAAaK,KAAKN,MAAMC,YAC5Bc,iBAAkBT,KAAKS,iBACvBX,SAAUE,KAAKF,oB,GA1BQY,cCO1BC,MAXf,WACE,OACE,sBAAKR,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,iCAGA,cAAC,EAAD,QCISS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.8d818a88.chunk.js","sourcesContent":["import React, {Component} from 'react'; \r\n// Importing Module \r\nimport {Editor, EditorState , RichUtils} from 'draft-js';\r\nimport 'draft-js/dist/Draft.css';\r\nimport './texteditor.css';\r\n\r\n export default class Texteditor extends Component {\r\n  \r\n  _onBoldClick() {\r\n    this.onChange(RichUtils.toggleInlineStyle(this.state.editorState, 'BOLD'));\r\n  }\r\n  _onItalicClick() {\r\n    this.onChange(RichUtils.toggleInlineStyle(this.state.editorState, 'ITALIC'));\r\n  }\r\n  _onUnderlineClick() {\r\n    this.onChange(RichUtils.toggleInlineStyle(this.state.editorState, 'UNDERLINE'));\r\n  }\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {editorState: EditorState.createEmpty()};\r\n        this.onChange = editorState => this.setState({editorState});\r\n      }\r\n    \r\n      render() {\r\n        return (\r\n          <div>\r\n          <button className=\"b-button\" onClick={this._onBoldClick.bind(this)}>Bold</button>\r\n          <button className=\"b-button\" onClick={this._onItalicClick.bind(this)}>Italic</button>\r\n          <button className=\"b-button\" onClick={this._onUnderlineClick.bind(this)}>Underline</button>\r\n            <div className=\"editors-panel\">\r\n              <Editor editorState={this.state.editorState}\r\n                  handleKeyCommand={this.handleKeyCommand}\r\n                  onChange={this.onChange} /></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import './App.css';\nimport  Texteditor from './components/texteditor';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      Beautiful readme.md\n      </header> \n      <Texteditor/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}