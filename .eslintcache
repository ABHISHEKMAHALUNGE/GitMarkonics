[{"/home/hargun/Beautiful-Readme/src/index.js":"1","/home/hargun/Beautiful-Readme/src/App.js":"2","/home/hargun/Beautiful-Readme/src/reportWebVitals.js":"3","/home/hargun/Beautiful-Readme/src/components/texteditor.js":"4","/home/hargun/Beautiful-Readme/src/components/ouput.js":"5"},{"size":548,"mtime":1613726031448,"results":"6","hashOfConfig":"7"},{"size":265,"mtime":1613726031448,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1613726031448,"results":"9","hashOfConfig":"7"},{"size":2997,"mtime":1615703744704,"results":"10","hashOfConfig":"7"},{"size":939,"mtime":1615704123696,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"du28ga",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/hargun/Beautiful-Readme/src/index.js",[],["24","25"],"/home/hargun/Beautiful-Readme/src/App.js",[],"/home/hargun/Beautiful-Readme/src/reportWebVitals.js",[],"/home/hargun/Beautiful-Readme/src/components/texteditor.js",["26","27","28"],"import React, { Component } from \"react\";\n// Importing Module\nimport { Editor, EditorState, RichUtils } from \"draft-js\";\nimport \"draft-js/dist/Draft.css\";\nimport \"./texteditor.css\";\nimport { convertToRaw } from \"draft-js\";\nimport { stateToHTML } from \"draft-js-export-html\";\nimport { Flex, Center, Text, Box, Button, Stack, Icon } from \"@chakra-ui/react\";\nimport { GoBold, GoItalic, GoDesktopDownload } from \"react-icons/go\";\nimport Output from './ouput'\n\nexport default class Texteditor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { editorState: EditorState.createEmpty() };\n    this.onChange = (editorState) => {\n      this.setState({ editorState });\n      var value = stateToHTML(this.state.editorState.getCurrentContent());\n      this.file = this.replacer(value);\n      // console.log(convertToRaw(this.state.editorState.getCurrentContent()));\n    };\n  }\n\n  replacer(input) {\n    // console.log(input);\n    input = input\n      .replace(/<p>/g, \"\")\n      .replace(/<\\/p>/g, \"</br>\")\n      .replace(/<br>/g, \"\")\n      .replace(/<strong>/g, \"**\")\n      .replace(/<\\/strong>/g, \"**\")\n      .replace(/&nbsp;/g, \" \");\n    input = input.replace(/<em>/g, \"_\").replace(/<\\/em>/g, \"_\");\n    return input;\n  }\n\n  _onBoldClick() {\n    this.onChange(RichUtils.toggleInlineStyle(this.state.editorState, \"BOLD\"));\n  }\n  _onItalicClick() {\n    this.onChange(\n      RichUtils.toggleInlineStyle(this.state.editorState, \"ITALIC\")\n    );\n  }\n  _onUnderlineClick() {\n    this.onChange(\n      RichUtils.toggleInlineStyle(this.state.editorState, \"UNDERLINE\")\n    );\n  }\n  onDownload() {\n    const hiddenElement = document.createElement(\"a\");\n\n    hiddenElement.href = \"data:attachment/text,\" + encodeURI(this.file);\n    hiddenElement.target = \"_blank\";\n    hiddenElement.download = \"README.md\";\n    hiddenElement.click();\n  }\n\n  render() {\n    return (\n      <div>\n        <Flex color=\"black\">\n          <Box\n            flex=\"1\"\n            bg=\"tomato\"\n            border=\"1px\"\n            borderColor=\"gray.10\"\n            p={1}\n            m={2}\n          >\n            <Stack direction=\"row\" spacing={1} align=\"center\">\n              <Button onClick={this._onBoldClick.bind(this)}>\n                <Icon as={GoBold} />\n              </Button>\n              <Button onClick={this._onItalicClick.bind(this)}>\n                {\" \"}\n                <Icon as={GoItalic} />\n              </Button>\n\n              <Button onClick={this.onDownload.bind(this)}>\n                <Icon as={GoDesktopDownload} /> &nbsp;Download\n              </Button>\n            </Stack>\n            <Box className=\"editors-panel\">\n              <Editor\n                editorState={this.state.editorState}\n                handleKeyCommand={this.handleKeyCommand}\n                onChange={this.onChange}\n                placeholder=\"Lets Start Documenting ...\"\n              />\n            </Box>\n          </Box>\n          <Output file ={this.file}/>\n        </Flex>\n         \n      </div>\n    );\n  }\n}\n","/home/hargun/Beautiful-Readme/src/components/ouput.js",[],{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":6,"column":10,"nodeType":"35","messageId":"36","endLine":6,"endColumn":22},{"ruleId":"33","severity":1,"message":"37","line":8,"column":16,"nodeType":"35","messageId":"36","endLine":8,"endColumn":22},{"ruleId":"33","severity":1,"message":"38","line":8,"column":24,"nodeType":"35","messageId":"36","endLine":8,"endColumn":28},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'convertToRaw' is defined but never used.","Identifier","unusedVar","'Center' is defined but never used.","'Text' is defined but never used.","no-global-assign","no-unsafe-negation"]